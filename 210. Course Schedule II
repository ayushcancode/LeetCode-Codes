//https://leetcode.com/problems/course-schedule-ii/

class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        
        vector<int> in(numCourses, 0);
        vector<vector<int>> adj(numCourses);
        for(int i = 0; i < prerequisites.size(); i++)
        {
            adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
            in[prerequisites[i][0]]++;
        }
        
        queue<int> q;
        for(int i = 0; i < numCourses; i++)
        {
            if(in[i] == 0) q.push(i);
        }
        int cnt = 0;
        vector<int> ans, order;
        while(!q.empty())
        {
            int cur = q.front();
            q.pop();
            for(auto it : adj[cur])
            {
                in[it]--;
                if(in[it] == 0) q.push(it);
            }
            cnt++;
            order.push_back(cur);
        }
        
        if(cnt == numCourses) ans = order;
        return ans;
    }
};
